name: Challenge API CI pipeline
on:
  push:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Testing application"
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Make Gradle executable
        run: chmod +x gradlew
        shell: bash
      - name: Run tests with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean test

  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    env:
      LAST_COMMIT_SHA: ${{ github.sha }}
    steps:
      - run: echo "Building application and "
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Make Gradle executable
        run: chmod +x gradlew
        shell: bash
      - name: Make
        run: chmod +x ci/set-metadata.sh
        shell: bash
      - name: Configure application metadata
        run: ./ci/set-metadata.sh
        shell: bash
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build application with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build -x test
      - name: Get version of JAR/application
        run: echo "version=$(grep ^version build.gradle | cut -d'=' -f2 | sed -e 's/^[[:space:]]*//' | tr -d \')" >> $GITHUB_ENV
      - id: set_version
        name: Set version for package job
        run: echo "version=$version" >> $GITHUB_OUTPUT
      - name: Export JAR file for publishing
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: build/libs/challenge-${version}.jar
      - name: Export Dockerfile for publishing
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile
          path: Dockerfile

#  publish:
    # Log into Github docker repo
    # Build and Publish docker image